# Generated by Django 2.2.4 on 2019-08-03 22:48

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import localflavor.generic.models
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orders', '0001_initial'),
        ('people', '0002_auto_20190803_2230'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('finance', '0001_initial'),
        ('common', '0003_nationality'),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicInstitution',
            fields=[
                ('academicinstitution_id', models.AutoField(primary_key=True, serialize=False)),
                ('academicinstitution_name', models.CharField(max_length=200, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Academic Institution',
                'verbose_name_plural': 'People - Academic Institutions',
                'ordering': ['academicinstitution_name'],
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('contract_id', models.AutoField(primary_key=True, serialize=False)),
                ('contract_start', models.DateField(verbose_name='Start date')),
                ('contract_duration', models.IntegerField(help_text='Months', verbose_name='Duration')),
                ('contract_duration_additional_days', models.IntegerField(default=0, help_text='Additional days', verbose_name='Days')),
                ('contract_end', models.DateField(verbose_name='End date')),
                ('contract_salary', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Monthly Salary')),
                ('contract_socialsecurity', models.CharField(blank=True, choices=[('G', 'Grants'), ('CF', 'CF'), ('CFRC', 'CF Running costs')], max_length=4, null=True, verbose_name='Soc. Sec')),
                ('contract_fellowshipref', models.CharField(blank=True, max_length=100, null=True, verbose_name='Fellowship ref.')),
                ('contract_ref', models.CharField(blank=True, max_length=50, null=True, verbose_name='Contract ref.')),
                ('contract_socialsecuritypaid', models.NullBooleanField(default=None, verbose_name='Paying Social Security')),
                ('contract_socialsecuritystart', models.DateField(blank=True, null=True, verbose_name='Soc. Sec. Start date')),
                ('contract_socialsecurityend', models.DateField(blank=True, null=True, verbose_name='Soc. Sec. End date')),
                ('contract_scientificdesc', models.TextField(blank=True, default='', null=True, verbose_name='Scientific Work Description')),
                ('contract_notes', models.TextField(blank=True, default='', null=True, verbose_name='Notes')),
                ('contract_warningemail', models.BooleanField(default=True, help_text='Send an alert warning the end of the contract', verbose_name='Warn when the contract is ending')),
            ],
            options={
                'verbose_name': 'contract',
                'verbose_name_plural': 'contracts',
                'ordering': ['-contract_end'],
            },
        ),
        migrations.CreateModel(
            name='ContractProposal',
            fields=[
                ('status', model_utils.fields.StatusField(choices=[('pending', 'Pending'), ('printed', 'Printed'), ('submitted', 'Submitted'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=100, no_check_for_status=True, verbose_name='status')),
                ('status_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status', verbose_name='status changed')),
                ('motive', models.CharField(choices=[('new', 'New Hire'), ('renewal', 'Renewal'), ('update', 'Update')], default='new', max_length=7)),
                ('contractproposal_id', models.AutoField(primary_key=True, serialize=False)),
                ('contractproposal_createdon', models.DateField(auto_now_add=True, verbose_name='Created on')),
                ('contractproposal_start', models.DateField(verbose_name='Start date')),
                ('contractproposal_duration', models.IntegerField(help_text='Months', verbose_name='Duration')),
                ('contractproposal_duration_additional_days', models.IntegerField(default=0, help_text='Additional days', verbose_name='Days')),
                ('contractproposal_salary', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Monthly stipend / Gross salary')),
                ('contractproposal_approved', models.NullBooleanField(verbose_name='Approved')),
                ('contractproposal_personname', models.CharField(blank=True, help_text='In case the name is not in the list, fill it here', max_length=255, null=True, verbose_name='Person Name')),
                ('contractproposal_email', models.EmailField(blank=True, help_text='Admin will use this to contact the newcomer', max_length=255, null=True, verbose_name='Person Email')),
                ('contractproposal_scientificdesc', models.TextField(default='', help_text='Short mandatory description', verbose_name='Scientific Work Description')),
                ('contractproposal_closingdate', models.DateField(blank=True, null=True, verbose_name='Closing date')),
                ('closedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='closed_by', to=settings.AUTH_USER_MODEL, verbose_name='Closed by')),
                ('contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='humanresources.Contract')),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='people.Person')),
                ('position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='people.Position')),
                ('responsible', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responsible', to=settings.AUTH_USER_MODEL, verbose_name='Submitted by')),
                ('supervisor', models.ForeignKey(limit_choices_to={'djangouser__groups__name': 'PROFILE: Group responsible'}, on_delete=django.db.models.deletion.CASCADE, related_name='where_am_i_supervisor', to='people.Person', verbose_name='Supervisor')),
            ],
            options={
                'verbose_name': 'Contract Proposal',
                'verbose_name_plural': 'Contract Proposals',
                'ordering': ['-contractproposal_createdon'],
                'permissions': (('print_proposal', 'Print Proposal'), ('can_approve_contract_proposal', 'Approve or reject Proposals')),
            },
        ),
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('degree_id', models.AutoField(primary_key=True, serialize=False)),
                ('degree_name', models.CharField(max_length=200, verbose_name='Degree')),
                ('degree_show', models.NullBooleanField(verbose_name='Show in website')),
            ],
            options={
                'verbose_name': 'Degree',
                'verbose_name_plural': 'People - Degrees',
                'ordering': ['degree_name'],
            },
        ),
        migrations.CreateModel(
            name='FinancingInst',
            fields=[
                ('financinginst_id', models.AutoField(primary_key=True, serialize=False)),
                ('financinginst_payedby', models.CharField(blank=True, max_length=200, null=True, verbose_name='Paid by')),
                ('financinginst_payment', models.CharField(blank=True, choices=[('B', 'Bolsa'), ('S', 'Supplement once'), ('M', 'Suplement monthly')], max_length=1, null=True, verbose_name='Payment')),
            ],
            options={
                'verbose_name': 'Financing Institution',
                'verbose_name_plural': 'People - Financing Institutions',
                'ordering': ['financinginst_payedby'],
            },
        ),
        migrations.CreateModel(
            name='Function',
            fields=[
                ('function_id', models.AutoField(primary_key=True, serialize=False)),
                ('function_name', models.CharField(max_length=200, verbose_name='Function')),
            ],
            options={
                'verbose_name': 'Function',
                'verbose_name_plural': 'People - Functions',
                'ordering': ['function_name'],
            },
        ),
        migrations.CreateModel(
            name='IDDocument',
            fields=[
                ('iddocument_id', models.AutoField(primary_key=True, serialize=False)),
                ('iddocument_name', models.CharField(max_length=200, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'ID Document type',
                'verbose_name_plural': 'People - ID Documents types',
                'ordering': ['iddocument_name'],
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('institution_id', models.AutoField(primary_key=True, serialize=False)),
                ('institution_name', models.CharField(max_length=200, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Research Institution',
                'verbose_name_plural': 'People - Research Institutions',
                'ordering': ['institution_name'],
            },
        ),
        migrations.CreateModel(
            name='ScientificArea',
            fields=[
                ('scientificarea_id', models.AutoField(primary_key=True, serialize=False)),
                ('scientificarea_name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Scientific area',
                'verbose_name_plural': 'People - Scientific areas',
                'ordering': ['scientificarea_name'],
            },
        ),
        migrations.CreateModel(
            name='TypeOfFellowship',
            fields=[
                ('typeoffellowship_id', models.AutoField(primary_key=True, serialize=False)),
                ('typeoffellowship_name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Type of fellowship',
                'verbose_name_plural': 'Types of fellowships',
            },
        ),
        migrations.CreateModel(
            name='PrivateInfo',
            fields=[
                ('privateinfo_id', models.AutoField(primary_key=True, serialize=False)),
                ('privateinfo_docnumber', models.CharField(blank=True, max_length=500, null=True, verbose_name='Document number')),
                ('privateinfo_docexpiration', models.DateField(blank=True, null=True, verbose_name='Expiration date')),
                ('privateinfo_socialsecuritynum', models.CharField(blank=True, max_length=20, null=True, verbose_name='Social Security Number')),
                ('privateinfo_address', models.TextField(blank=True, default='', null=True, verbose_name='Address')),
                ('privateinfo_cv', models.FileField(blank=True, null=True, upload_to='uploads/privateinfo/privateinfo_cv', verbose_name='Curriculum Vitae')),
                ('privateinfo_bankinfo', models.TextField(blank=True, default='', null=True, verbose_name='Bank Info')),
                ('privateinfo_healthinsurance', models.NullBooleanField(verbose_name='Health Insurance')),
                ('privateinfo_healthinsurancestart', models.DateField(blank=True, null=True, verbose_name='Start date')),
                ('iban', localflavor.generic.models.IBANField(blank=True, include_countries=('PT',), max_length=34, use_nordea_extensions=False, verbose_name='IBAN')),
                ('nif', models.CharField(blank=True, max_length=9, validators=[django.core.validators.RegexValidator(code='nomatch', message='Invalid number', regex='^\\d{9}$')], verbose_name='NIF')),
                ('birthcity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.City', verbose_name='Birth City')),
                ('birthcountry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Country', verbose_name='Birth Country')),
                ('citizenship', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Citizenship')),
                ('iddocument', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='humanresources.IDDocument', verbose_name='ID Document')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='people.Person', verbose_name='Person')),
            ],
            options={
                'verbose_name': 'Private Info',
                'verbose_name_plural': 'Private Info',
                'ordering': ['person'],
            },
        ),
        migrations.CreateModel(
            name='Payout',
            fields=[
                ('payout_id', models.AutoField(primary_key=True, serialize=False)),
                ('payout_start', models.DateField(blank=True, null=True, verbose_name='Start date')),
                ('payout_end', models.DateField(blank=True, null=True, verbose_name='End date')),
                ('payout_amount', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Monthly amount')),
                ('total', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=15, verbose_name='Total amount')),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='humanresources.Contract', verbose_name='Contract')),
                ('financeproject', models.ForeignKey(limit_choices_to={'expensecode__expensecode_number': '01'}, on_delete=django.db.models.deletion.CASCADE, to='finance.Project', verbose_name='Finance Project')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='orders.Order', verbose_name='Order')),
            ],
            options={
                'verbose_name': 'payout',
                'verbose_name_plural': 'payouts',
                'ordering': ['payout_start'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('payment_amount', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Monthly amount')),
                ('payment_nmonths', models.IntegerField(blank=True, choices=[(1, '1 month'), (2, '2 months'), (3, '3 months'), (4, '4 months'), (5, '5 months'), (6, '6 months'), (7, '7 months'), (8, '8 months'), (9, '9 months'), (10, '10 months'), (11, '11 months'), (12, '12 months')], default=None, null=True, verbose_name='Use this finance project for')),
                ('contractproposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='humanresources.ContractProposal', verbose_name='Proposal')),
                ('financeproject', models.ForeignKey(limit_choices_to={'expensecode__expensecode_number': '01'}, on_delete=django.db.models.deletion.CASCADE, to='finance.Project', verbose_name='Finance Project')),
            ],
            options={
                'verbose_name': 'Proposal payout',
                'verbose_name_plural': 'Proposal payouts',
            },
        ),
        migrations.AddField(
            model_name='contractproposal',
            name='typeoffellowship',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='humanresources.TypeOfFellowship', verbose_name='Type of contract'),
        ),
        migrations.CreateModel(
            name='ContractFile',
            fields=[
                ('contractfile_id', models.AutoField(primary_key=True, serialize=False)),
                ('contractfile_createdon', models.DateField(auto_now_add=True, verbose_name='Created on')),
                ('contractfile_file', models.FileField(max_length=255, upload_to='contract/contractfile')),
                ('contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='humanresources.Contract')),
                ('createdby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
            ],
            options={
                'verbose_name': 'Contract files',
                'verbose_name_plural': 'Contract file',
                'ordering': ['contractfile_createdon'],
            },
        ),
        migrations.AddField(
            model_name='contract',
            name='financinginst',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='humanresources.FinancingInst', verbose_name='Paid by'),
        ),
        migrations.AddField(
            model_name='contract',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='people.Person'),
        ),
        migrations.AddField(
            model_name='contract',
            name='position',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='people.Position'),
        ),
        migrations.AddField(
            model_name='contract',
            name='supervisor',
            field=models.ForeignKey(default=None, limit_choices_to={'djangouser__groups__name': 'PROFILE: Group responsible', 'person_active': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supervisor', to='people.Person'),
        ),
        migrations.AddField(
            model_name='contract',
            name='typeoffellowship',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='humanresources.TypeOfFellowship', verbose_name='Type of fellowship'),
        ),
        migrations.CreateModel(
            name='AcademicCareer',
            fields=[
                ('academiccareer_id', models.AutoField(primary_key=True, serialize=False)),
                ('graduation_year', models.IntegerField(null=True)),
                ('degree', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='humanresources.Degree')),
                ('field_of_study', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='humanresources.ScientificArea', verbose_name='Field of Study')),
                ('institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.Institution', verbose_name='Institute')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='people.Person')),
            ],
            options={
                'verbose_name': 'Academic Career',
                'verbose_name_plural': 'People - Academic Careers',
                'ordering': ['-graduation_year'],
            },
        ),
    ]
