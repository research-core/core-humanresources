# Generated by Django 2.2.4 on 2019-08-08 15:50

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import localflavor.generic.models
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('people', '0004_auto_20190806_1713'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('common', '0001_initial'),
        ('finance', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField(verbose_name='Start date')),
                ('months_duration', models.IntegerField(help_text='Months', verbose_name='Duration')),
                ('days_duration', models.IntegerField(default=0, help_text='Additional days', verbose_name='Days')),
                ('end', models.DateField(verbose_name='End date')),
                ('salary', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Monthly Salary')),
                ('fellowship_ref', models.CharField(blank=True, max_length=100, null=True, verbose_name='Fellowship ref.')),
                ('ref', models.CharField(blank=True, max_length=50, null=True, verbose_name='Contract ref.')),
                ('socialsecurity_from', models.CharField(blank=True, choices=[('G', 'Grants'), ('CF', 'CF'), ('CFRC', 'CF Running costs')], max_length=4, null=True, verbose_name='Soc. Sec')),
                ('socialsecurity_pay', models.NullBooleanField(default=None, verbose_name='Paying Social Security')),
                ('socialsecurity_start', models.DateField(blank=True, null=True, verbose_name='Soc. Sec. Start date')),
                ('socialsecurity_end', models.DateField(blank=True, null=True, verbose_name='Soc. Sec. End date')),
                ('description', models.TextField(blank=True, default='', null=True, verbose_name='Scientific Work Description')),
                ('notes', models.TextField(blank=True, default='', null=True, verbose_name='Notes')),
                ('warn_when_ending', models.BooleanField(default=True, help_text='Send an alert warning the end of the contract', verbose_name='Warn when the contract is ending')),
            ],
            options={
                'verbose_name': 'contract',
                'verbose_name_plural': 'contracts',
                'ordering': ['-end'],
            },
        ),
        migrations.CreateModel(
            name='ContractProposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', model_utils.fields.StatusField(choices=[('pending', 'Pending'), ('printed', 'Printed'), ('submitted', 'Submitted'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=100, no_check_for_status=True, verbose_name='status')),
                ('status_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status', verbose_name='status changed')),
                ('motive', models.CharField(choices=[('new', 'New Hire'), ('renewal', 'Renewal'), ('update', 'Update')], default='new', max_length=7)),
                ('created_on', models.DateField(auto_now_add=True, verbose_name='Created on')),
                ('person_name', models.CharField(blank=True, help_text='In case the name is not in the list, fill it here', max_length=255, null=True, verbose_name='Person Name')),
                ('person_email', models.EmailField(blank=True, help_text='Admin will use this to contact the newcomer', max_length=255, null=True, verbose_name='Person Email')),
                ('salary', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Monthly stipend / Gross salary')),
                ('start', models.DateField(verbose_name='Start date')),
                ('months_duration', models.IntegerField(help_text='Months', verbose_name='Duration')),
                ('days_duration', models.IntegerField(default=0, help_text='Additional days', verbose_name='Days')),
                ('description', models.TextField(default='', help_text='Short mandatory description', verbose_name='Scientific Work Description')),
                ('closed_on', models.DateField(blank=True, null=True, verbose_name='Closing date')),
                ('closed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='closed_by', to=settings.AUTH_USER_MODEL, verbose_name='Closed by')),
                ('contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='humanresources.Contract')),
            ],
            options={
                'verbose_name': 'Contract proposal',
                'verbose_name_plural': 'Contract proposals',
                'ordering': ['-created_on'],
                'permissions': (('print_proposal', 'Print Proposal'), ('can_approve_contract_proposal', 'Approve or reject Proposals')),
            },
        ),
        migrations.CreateModel(
            name='FellowshipType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Fellowship type',
                'verbose_name_plural': 'Types of fellowships',
            },
        ),
        migrations.CreateModel(
            name='IDDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'ID document type',
                'verbose_name_plural': 'ID documents types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PrivateInfo',
            fields=[
                ('privateinfo_id', models.AutoField(primary_key=True, serialize=False)),
                ('privateinfo_docnumber', models.CharField(blank=True, max_length=500, null=True, verbose_name='Document number')),
                ('privateinfo_docexpiration', models.DateField(blank=True, null=True, verbose_name='Expiration date')),
                ('privateinfo_socialsecuritynum', models.CharField(blank=True, max_length=20, null=True, verbose_name='Social Security Number')),
                ('privateinfo_address', models.TextField(blank=True, default='', null=True, verbose_name='Address')),
                ('privateinfo_cv', models.FileField(blank=True, null=True, upload_to='uploads/privateinfo/privateinfo_cv', verbose_name='Curriculum Vitae')),
                ('privateinfo_bankinfo', models.TextField(blank=True, default='', null=True, verbose_name='Bank Info')),
                ('privateinfo_healthinsurance', models.NullBooleanField(verbose_name='Health Insurance')),
                ('privateinfo_healthinsurancestart', models.DateField(blank=True, null=True, verbose_name='Start date')),
                ('iban', localflavor.generic.models.IBANField(blank=True, include_countries=('PT',), max_length=34, use_nordea_extensions=False, verbose_name='IBAN')),
                ('nif', models.CharField(blank=True, max_length=9, validators=[django.core.validators.RegexValidator(code='nomatch', message='Invalid number', regex='^\\d{9}$')], verbose_name='NIF')),
                ('birthcity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.City', verbose_name='Birth City')),
                ('birthcountry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Country', verbose_name='Birth Country')),
                ('citizenship', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Citizenship')),
                ('iddocument', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='humanresources.IDDocument', verbose_name='ID Document')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='people.Person', verbose_name='Person')),
            ],
            options={
                'verbose_name': 'Private Info',
                'verbose_name_plural': 'Private Info',
                'ordering': ['person'],
            },
        ),
        migrations.CreateModel(
            name='Payout',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField(blank=True, null=True, verbose_name='Start date')),
                ('end', models.DateField(blank=True, null=True, verbose_name='End date')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Monthly amount')),
                ('total', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=15, verbose_name='Total amount')),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='humanresources.Contract', verbose_name='Contract')),
                ('project', models.ForeignKey(limit_choices_to={'expensecode__number': '01'}, on_delete=django.db.models.deletion.CASCADE, to='finance.Project', verbose_name='Finance Project')),
            ],
            options={
                'verbose_name': 'payout',
                'verbose_name_plural': 'payouts',
                'ordering': ['start'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Monthly amount')),
                ('n_months', models.IntegerField(blank=True, choices=[(1, '1 month'), (2, '2 months'), (3, '3 months'), (4, '4 months'), (5, '5 months'), (6, '6 months'), (7, '7 months'), (8, '8 months'), (9, '9 months'), (10, '10 months'), (11, '11 months'), (12, '12 months')], default=None, null=True, verbose_name='Use this finance project for')),
                ('project', models.ForeignKey(limit_choices_to={'expensecode__number': '01'}, on_delete=django.db.models.deletion.CASCADE, to='finance.Project', verbose_name='Finance Project')),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='humanresources.ContractProposal', verbose_name='Proposal')),
            ],
            options={
                'verbose_name': 'Proposal payout',
                'verbose_name_plural': 'Proposal payouts',
            },
        ),
        migrations.AddField(
            model_name='contractproposal',
            name='fellowship_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='humanresources.FellowshipType', verbose_name='Type of contract'),
        ),
        migrations.AddField(
            model_name='contractproposal',
            name='person',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='people.Person'),
        ),
        migrations.AddField(
            model_name='contractproposal',
            name='position',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='people.Position'),
        ),
        migrations.AddField(
            model_name='contractproposal',
            name='responsible',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responsible_of_proposals', to='people.Person', verbose_name='Submitted by'),
        ),
        migrations.AddField(
            model_name='contractproposal',
            name='supervisor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supervisor_of_proposals', to='people.Person', verbose_name='Supervisor'),
        ),
        migrations.CreateModel(
            name='ContractFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateField(auto_now_add=True, verbose_name='Created on')),
                ('file', models.FileField(max_length=255, upload_to='contract/contractfile')),
                ('contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='humanresources.Contract')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
            ],
            options={
                'verbose_name': 'Contract files',
                'verbose_name_plural': 'Contract file',
                'ordering': ['created_on'],
            },
        ),
        migrations.AddField(
            model_name='contract',
            name='fellowship_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='humanresources.FellowshipType', verbose_name='Type of fellowship'),
        ),
        migrations.AddField(
            model_name='contract',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='people.Person'),
        ),
        migrations.AddField(
            model_name='contract',
            name='position',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='people.Position'),
        ),
        migrations.AddField(
            model_name='contract',
            name='supervisor',
            field=models.ForeignKey(default=None, limit_choices_to={'active': True, 'auth_user__groups__name': 'PROFILE: Group responsible'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supervisor', to='people.Person'),
        ),
    ]
